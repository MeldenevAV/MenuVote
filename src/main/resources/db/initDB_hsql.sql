DROP TABLE restaurant_vote IF EXISTS;
DROP TABLE menu_items IF EXISTS;
DROP TABLE menus IF EXISTS;
DROP TABLE restaurants IF EXISTS;
DROP TABLE user_roles IF EXISTS;
DROP TABLE users IF EXISTS;
DROP SEQUENCE global_seq IF EXISTS;

CREATE SEQUENCE GLOBAL_SEQ
  AS INTEGER
  START WITH 100000;

CREATE TABLE users
(
  id         INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name       VARCHAR(255)            NOT NULL,
  email      VARCHAR(255)            NOT NULL,
  password   VARCHAR(255)            NOT NULL,
  registered TIMESTAMP DEFAULT now() NOT NULL,
  enabled    BOOLEAN DEFAULT TRUE    NOT NULL
);
CREATE UNIQUE INDEX users_unique_email_idx
  ON USERS (email);

CREATE TABLE user_roles
(
  user_id INTEGER NOT NULL,
  role    VARCHAR(255),
  CONSTRAINT user_roles_idx UNIQUE (user_id, role),
  FOREIGN KEY (user_id) REFERENCES USERS (id)
    ON DELETE CASCADE
);

CREATE TABLE restaurants
(
  id   INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  CONSTRAINT restaurant_idx UNIQUE (NAME)
);

CREATE TABLE menus
(
  id            INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  restaurant_id INTEGER NOT NULL,
  menu_date     DATE    NOT NULL,
  CONSTRAINT restaurant_menu_day_idx UNIQUE (restaurant_id, id, menu_date),
  FOREIGN KEY (restaurant_id) REFERENCES restaurants (id)
    ON DELETE CASCADE
);

CREATE TABLE menu_items
(
  id      INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  menu_id INTEGER      NOT NULL,
  name    VARCHAR(255) NOT NULL,
  price   FLOAT        NOT NULL,
  CONSTRAINT menu_description_idx UNIQUE (menu_id, name),
  FOREIGN KEY (menu_id) REFERENCES menus (id)
    ON DELETE CASCADE
);

CREATE TABLE restaurant_vote
(
  id            INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  restaurant_id INTEGER NOT NULL,
  user_id       INTEGER NOT NULL,
  vote_date     DATE    NOT NULL,
  vote_time     TIME    NOT NULL,
  CONSTRAINT restaurant_user_date_idx UNIQUE (restaurant_id, user_id, vote_date),
  FOREIGN KEY (user_id) REFERENCES users (id)
    ON DELETE CASCADE
);
